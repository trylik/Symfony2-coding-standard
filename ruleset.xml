<?xml version="1.0"?>
<ruleset name="Symfony2">
    <description>The Symfony2 coding standard.</description>

    <!-- There should not be any code in the bundle Resources directory. -->
    <exclude-pattern>*/Resources/*</exclude-pattern>

    <!--

    See the [documented coding standard](http://hile.mn/hdid1p)

    This CodeSniffer standard does not yet enforce the following:

    # Structure

    * Add a blank line before return statements;
    * Define one class per file;
    * Declare class properties before methods;
    * Declare public methods first, then protected ones and finally private ones.
    * Suffix interfaces with Interface;
    * Use namespaces for all classes;
    * Add PHPDoc blocks for all classes, methods, and functions;
    * The @package and @subpackage annotations are not used.

    # Naming Conventions

    * Use underscores for option, argument, parameter names;
    * Use Symfony as the first namespace level;

    -->

    <rule ref="Generic.ControlStructures.InlineControlStructure"/>
    <rule ref="Generic.Formatting.SpaceAfterCast"/>
    <rule ref="Generic.Functions.CallTimePassByReference"/>
    <rule ref="Generic.PHP.LowerCaseConstant"/>
    <rule ref="Squiz.Arrays.ArrayBracketSpacing"/>
    <rule ref="Squiz.ControlStructures.ControlSignature"/>
    <rule ref="Squiz.ControlStructures.ForEachLoopDeclaration"/>
    <rule ref="Squiz.ControlStructures.ForLoopDeclaration"/>
    <rule ref="Squiz.ControlStructures.LowercaseDeclaration"/>
    <rule ref="Squiz.PHP.LowercasePHPFunctions"/>
    <rule ref="Squiz.Scope.MemberVarScope"/>
    <rule ref="Squiz.Scope.MethodScope"/>

    <rule ref="Generic.Files.LineLength">
        <properties>
            <property name="lineLimit" value="85"/>
            <property name="absoluteLineLimit" value="120"/>
        </properties>
    </rule>
    <rule ref="Generic.Files.LineLength.TooLong">
        <message>Consider breaking lines longer than %s characters; contains %s characters</message>
    </rule>

    <!-- Import Zend coding standard (which in turn imports PEAR) -->
    <rule ref="Zend">
        <!-- but exclude their code analyzer -->
        <exclude name="Zend.Debug.CodeAnalyzer"/>

        <!-- covered by Squiz ControlSignature, which enforces try/catch as well -->
        <exclude name="PEAR.ControlStructures.ControlSignature"/>
    </rule>

    <!-- Don't enforce Zend's private member underscores -->
    <rule ref="Zend.NamingConventions.ValidVariableName.PrivateNoUnderscore">
        <severity>0</severity>
    </rule>

    <!-- In practice, Symfony2 spaces multiline function calls differently than Zend -->
    <rule ref="PEAR.Functions.FunctionCallSignature.ContentAfterOpenBracket">
        <severity>0</severity>
    </rule>
    <rule ref="PEAR.Functions.FunctionCallSignature.CloseBracketLine">
        <severity>0</severity>
    </rule>

</ruleset>